# Code generated by protoc-gen-connect-python 0.1.0.dev2, DO NOT EDIT.
import connect

from elizav1 import eliza_pb2 as elizav1_dot_eliza__pb2
from mattv1 import matt_pb2 as mattv1_dot_matt__pb2

MattServiceName = "matt.v1.MattService"
OtherServiceName = "matt.v1.OtherService"


class MattServiceClient:
    def __init__(self, base_url, *, pool=None, compressor=None, json=False):
        self._hey = connect.Client(
            pool=pool,
            url=f"{base_url}/{MattServiceName}/Hey",
            response_type=mattv1_dot_matt__pb2.HeyResponse,
            compressor=compressor,
            json=json,
        )
        self._say = connect.Client(
            pool=pool,
            url=f"{base_url}/{MattServiceName}/Say",
            response_type=elizav1_dot_eliza__pb2.SayResponse,
            compressor=compressor,
            json=json,
        )

    def Hey(self, req):
        return self._hey.call_unary(req)

    def Say(self, req):
        return self._say.call_unary(req)


def NewMattServiceHandler(impl, *, prefix=""):
    return connect.Handler({
        f"{prefix}/{MattServiceName}/Hey": connect.UnaryHandler(
            impl.Hey,
            request_type=mattv1_dot_matt__pb2.HeyRequest,
        ),
        f"{prefix}/{MattServiceName}/Say": connect.UnaryHandler(
            impl.Say,
            request_type=elizav1_dot_eliza__pb2.SayRequest,
        ),
    })


class OtherServiceClient:
    def __init__(self, base_url, *, pool=None, compressor=None, json=False):
        pass


def NewOtherServiceHandler(impl, *, prefix=""):
    return connect.Handler({})
