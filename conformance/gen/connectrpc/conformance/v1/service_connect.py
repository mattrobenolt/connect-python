# Code generated by protoc-gen-connect-python 0.1.0.dev2, DO NOT EDIT.
import connect

from connectrpc.conformance.v1 import service_pb2 as connectrpc_dot_conformance_dot_v1_dot_service__pb2

ConformanceServiceName = "connectrpc.conformance.v1.ConformanceService"


class ConformanceServiceClient:
    def __init__(self, base_url, *, pool=None, compressor=None, json=False, **opts):
        self._unary = connect.Client(
            pool=pool,
            url=f"{base_url}/{ConformanceServiceName}/Unary",
            response_type=connectrpc_dot_conformance_dot_v1_dot_service__pb2.UnaryResponse,
            compressor=compressor,
            json=json,
            **opts
        )
        self._server_stream = connect.Client(
            pool=pool,
            url=f"{base_url}/{ConformanceServiceName}/ServerStream",
            response_type=connectrpc_dot_conformance_dot_v1_dot_service__pb2.ServerStreamResponse,
            compressor=compressor,
            json=json,
            **opts
        )
        self._client_stream = connect.Client(
            pool=pool,
            url=f"{base_url}/{ConformanceServiceName}/ClientStream",
            response_type=connectrpc_dot_conformance_dot_v1_dot_service__pb2.ClientStreamResponse,
            compressor=compressor,
            json=json,
            **opts
        )
        self._bidi_stream = connect.Client(
            pool=pool,
            url=f"{base_url}/{ConformanceServiceName}/BidiStream",
            response_type=connectrpc_dot_conformance_dot_v1_dot_service__pb2.BidiStreamResponse,
            compressor=compressor,
            json=json,
            **opts
        )
        self._unimplemented = connect.Client(
            pool=pool,
            url=f"{base_url}/{ConformanceServiceName}/Unimplemented",
            response_type=connectrpc_dot_conformance_dot_v1_dot_service__pb2.UnimplementedResponse,
            compressor=compressor,
            json=json,
            **opts
        )
        self._idempotent_unary = connect.Client(
            pool=pool,
            url=f"{base_url}/{ConformanceServiceName}/IdempotentUnary",
            response_type=connectrpc_dot_conformance_dot_v1_dot_service__pb2.IdempotentUnaryResponse,
            compressor=compressor,
            json=json,
            **opts
        )

    def unary(self, req, **opts):
        return self._unary.call_unary(req, **opts)

    def server_stream(self, req, **opts):
        return self._server_stream.call_server_stream(req, **opts)

    def client_stream(self, req, **opts):
        return self._client_stream.call_client_stream(req, **opts)

    def bidi_stream(self, req, **opts):
        return self._bidi_stream.call_bidi_stream(req, **opts)

    def unimplemented(self, req, **opts):
        return self._unimplemented.call_unary(req, **opts)

    def idempotent_unary(self, req, **opts):
        return self._idempotent_unary.call_unary(req, **opts)
